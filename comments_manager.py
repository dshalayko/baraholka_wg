import asyncio
from pyrogram import Client

from logger import logger
from config import API_ID, API_HASH

chat_id = -1002212626667  # ID —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã

async def forward_thread_replies(old_thread_id, new_thread_id):
    logger.info(f"üöÄ [forward_thread_replies] –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Å old_thread_id={old_thread_id}, new_thread_id={new_thread_id}")
    app = Client("my_session", api_id=API_ID, api_hash=API_HASH)

    try:
        await app.start()
        found_message_id = None
        new_message_id = None

        logger.info(f"‚è≥ [forward_thread_replies] –û–∂–∏–¥–∞–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        await asyncio.sleep(2)

        # üîç –ñ–¥—ë–º, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥—ë–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (old_message_id)
        for attempt in range(5):  # 5 –ø–æ–ø—ã—Ç–æ–∫ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 2 —Å–µ–∫
            async for message in app.get_chat_history(chat_id, limit=1000):
                if hasattr(message, "forward_from_message_id") and message.forward_from_message_id == old_thread_id:
                    found_message_id = message.id
                    logger.info(f"‚úÖ [forward_thread_replies] –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: {found_message_id}")
                    break
            if found_message_id:
                break
            logger.warning(f"‚ö†Ô∏è [forward_thread_replies] –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}/5), –∂–¥–µ–º 2 —Å–µ–∫...")
            await asyncio.sleep(2)

        if not found_message_id:
            logger.error(f"‚ùå [forward_thread_replies] –°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            await app.stop()
            return False

        # üîç –ñ–¥—ë–º, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥—ë–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (new_message_id)
        for attempt in range(5):  # 5 –ø–æ–ø—ã—Ç–æ–∫ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 2 —Å–µ–∫
            async for message in app.get_chat_history(chat_id, limit=1000):
                if hasattr(message, "forward_from_message_id") and message.forward_from_message_id == new_thread_id:
                    new_message_id = message.id
                    logger.info(f"‚úÖ [forward_thread_replies] –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: {new_message_id}")
                    break
            if new_message_id:
                break
            logger.warning(f"‚ö†Ô∏è [forward_thread_replies] –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}/5), –∂–¥–µ–º 2 —Å–µ–∫...")
            await asyncio.sleep(2)

        if not new_message_id:
            logger.error(f"‚ùå [forward_thread_replies] –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            await app.stop()
            return False

        # üîÑ –ü–µ—Ä–µ–Ω–æ—Å –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤
        logger.info(f"üîÑ [forward_thread_replies] –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ {found_message_id} ‚Üí {new_message_id}")

        async for message in app.get_chat_history(chat_id, limit=1000):
            if hasattr(message, "reply_to_message_id") and message.reply_to_message_id == found_message_id:
                original_author = message.from_user.first_name if message.from_user else "–ê–Ω–æ–Ω–∏–º"
                username = f"@{message.from_user.username}" if message.from_user and message.from_user.username else ""
                original_text = message.text or "üì∑ –ú–µ–¥–∏–∞"

                logger.info(f"üì© [forward_thread_replies] –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ID {message.id}, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ {message.reply_to_message_id}")

                formatted_text = f"{username}\n{original_text}"

                await app.send_message(
                    chat_id=chat_id,
                    text=formatted_text,
                    reply_to_message_id=new_message_id
                )

        await app.stop()
        logger.info(f"‚úÖ [forward_thread_replies] –ü–µ—Ä–µ–Ω–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
        return True

    except Exception as e:
        logger.error(f"‚ùå [forward_thread_replies] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}")
        await app.stop()
        return False
